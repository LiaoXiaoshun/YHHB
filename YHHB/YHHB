#!/bin/bash
# /etc/init.d/YHHB

# ******************************************
#               YHHB v0.1.2
#                       By YinHang
#      https://github.com/YinHangCode/YHHB
#                      QQ Group: 107927710
# ******************************************

version="0.1.2"
basepath=$(cd `dirname $0`; pwd);

# config ###########################################

# 启动参数 可以附加HomeBridge的启动参数
STARTUP_PARAM=""
#STARTUP_PARAM="-D"
#STARTUP_PARAM="-I"
#STARTUP_PARAM="-D -I"

# 日志文件打印路径
# "${basepath}/logs/" 为脚本所在目录下logs文件
# "/home/pi/YHHB_logs/" 为记录日志到/home/pi/YHHB_logs/目录下
# "" 为不保存
LOG_FILE_PATH="${basepath}/logs/"
#LOG_FILE_PATH="/home/pi/YHHB_logs/"
#LOG_FILE_PATH=""


# 插件目录 不移动插件指明插件所在路径 移动插件设为空
PLUGIN_FILE_PATH=""
#PLUGIN_FILE_PATH="/usr/local/lib/node_modules/"


# 多HomeBridge位置 
# 目录结构例：
# '/home/pi/YHHB/hbs/MiAqaraPlatform/' 配置在该位置的路径
#   '/home/pi/YHHB/hbs/MiAqaraPlatform/config' HomeBridge配置文件路径
#   '/home/pi/YHHB/hbs/MiAqaraPlatform/plugin' HomeBridge插件文件路径 PLUGIN_FILE_PATH为空时有效
# '/home/pi/YHHB/hbs/MiPhilipsLightPlatform/' 配置在该位置的路径
#   '/home/pi/YHHB/hbs/MiPhilipsLightPlatform/config' HomeBridge配置文件路径
#   '/home/pi/YHHB/hbs/MiPhilipsLightPlatform/plugin' HomeBridge插件文件路径 PLUGIN_FILE_PATH为空时有效
hbPaths=(
'/home/pi/YHHB/hbs/BroadlinkRM/'
'/home/pi/YHHB/hbs/YeeLight/'
'/home/pi/YHHB/hbs/MiAqaraPlatform/'
'/home/pi/YHHB/hbs/RaspberryPi/'
'/home/pi/YHHB/hbs/Others/'
'/home/pi/YHHB/hbs/MiOutletPlatform/'
'/home/pi/YHHB/hbs/MiRobotVacuumPlatform/'
'/home/pi/YHHB/hbs/IkonkeOutletPlatform/'
'/home/pi/YHHB/hbs/IkonkeLightPlatform/'
'/home/pi/YHHB/hbs/MiPhilipsLightPlatform/'
'/home/pi/YHHB/hbs/MiFanPlatform/'
);

####################################################

getIndexs() {
    if [ -z "$1" ]; then
        for((index=0;index<=${#hbPaths[@]};index++)); do
            echo $(($index-1))
        done
    else
        str=$1;
        arr=(${str//,/ });
        for i in ${arr[@]}; do
            echo $(($i-1))
        done
    fi
}

getHomebridgePID() {
    pid=`ps -ef | grep homebridge | grep $1 | grep -v grep | head -1 | awk '{print $2}'`
    echo $pid;
}

getBridgeConfig() {
    if [ -f "$1" ]; then
        bridgeStr=`awk BEGIN{RS=EOF}'{gsub(/\n/," ");print}' $1 | awk '{gsub(/ /,"")}1' | awk '{gsub(/\t/,"")}1' | awk -F "\"bridge\":{" '{print $2}' | awk -F "}," '{print $1}'`;
        if [ -n "$bridgeStr" ]; then
            mNum=`echo $bridgeStr | awk -v RS=':' 'END {print --NR}'`;
            yNum=`echo $bridgeStr | awk -v RS='\"' 'END {print --NR}'`;
            if [ "$mNum" -eq "9" ] && [ "$yNum" -eq "14" ]; then
                echo $bridgeStr;
                return;
            fi
        fi
    fi
    echo "";
}

getBridgeConfigStringValue() {
    if [ -n "$1" ]; then
        valueStr=`echo $1 | awk -F "\"$2\":\"" '{print $2}' | awk -F "\"" '{print $1}'`;
        echo $valueStr;
        return;
    fi
    echo $3;
}

getBridgeConfigIntegerValue() {
    if [ -n "$1" ]; then
        valueStr=`echo $1 | awk -F "\"$2\":" '{print $2}' | awk -F "," '{print $1}'`;
        echo $valueStr;
        return;
    fi
    echo $3;
}

config() {
    indexs=$(getIndexs $1);
    for index in $indexs; do
        if [ $index -lt 0 ] || [ $index -gt ${#hbPaths[@]} ]; then
            continue;
        fi
        
        bridgeConfig=$(getBridgeConfig "${hbPaths[$index]}/config/config.json");
        echo -n -e "[$(($index+1))]" | awk '{printf ("%05s",$NF)}';
        echo -n -e " "
        echo -n $(getBridgeConfigStringValue "$bridgeConfig" "name" "-") | awk '{printf ("%-40s",$NF)}';
        echo -n -e " "
        echo -n "["$(getBridgeConfigStringValue "$bridgeConfig" "pin" "----------")"]"
        echo -n -e "    "
        echo -n $(getBridgeConfigStringValue "$bridgeConfig" "username" "--:--:--:--:--:--")
        echo -n -e "    "
        echo -n $(getBridgeConfigIntegerValue "$bridgeConfig" "port" "-----") | awk '{printf ("%5s",$NF)}';
        echo -n -e "    "
        echo -n "${hbPaths[$index]}/config/config.json"
        echo ""
    done
}

status() {
    indexs=$(getIndexs $1);
    for index in $indexs; do
        if [ $index -lt 0 ] || [ $index -gt ${#hbPaths[@]} ]; then
            continue;
        fi
        
        echo -n -e "[$(($index+1))]" | awk '{printf ("%05s",$NF)}';
        echo -n -e " "
        pid=$(getHomebridgePID ${hbPaths[$index]});
        if [ -z "$pid" ]; then
            echo -n "[Not Run]"
            echo -n -e " "
            echo -n " " | awk '{printf ("%09s",$NF)}';
            echo -n -e " "
            echo -n " " | awk '{printf ("%15s",$NF)}';
        else
            echo -n -e "[Running]"
            echo -n -e " "
            echo -n $pid | awk '{printf ("%09s",$NF)}';
            echo -n -e " "
            ps -o etimes= -p $pid | awk '{printf("%d-%02d:%02d:%02d\n",($1/60/60/24),($1/60/60%24),($1/60%60),($1%60))}' | awk '{printf ("%15s",$NF)}';
        fi
        echo -n -e "   "
        echo -n ${hbPaths[$index]}
        echo ""
    done
}

toggle() {
    indexs=$(getIndexs $1);
    for index in $indexs; do
        if [ $index -lt 0 ] || [ $index -gt ${#hbPaths[@]} ]; then
            continue;
        fi
        
        pid=$(getHomebridgePID ${hbPaths[$index]});
        if [ -z "$pid" ]; then
            start $(($index+1))
        else
            stop $(($index+1))
        fi
    done
}

start() {
    if [ -n "$LOG_FILE_PATH" ]; then
        if [ ! -x "$LOG_FILE_PATH" ]; then
            mkdir "$LOG_FILE_PATH"
            echo "[WARN] mkdir $LOG_FILE_PATH"
        fi
    fi
        
    indexs=$(getIndexs $1);
    for index in $indexs; do
        if [ $index -lt 0 ] || [ $index -gt ${#hbPaths[@]} ]; then
            continue;
        fi
        
        pid=$(getHomebridgePID ${hbPaths[$index]});
        if [ -z "$pid" ]; then
            cmd="nohup ${basepath}/homebridge $STARTUP_PARAM -U ${hbPaths[$index]}/config/ ";
            if [ -n "$PLUGIN_FILE_PATH" ]; then
                cmd="$cmd""-P $PLUGIN_FILE_PATH";
            else
                cmd="$cmd""-P ${hbPaths[$index]}/plugin/";
            fi
            cmd="$cmd"" >> ";
            if [ -n "$LOG_FILE_PATH" ]; then
                cmd="$cmd""$LOG_FILE_PATH/$(basename ${hbPaths[$index]}).log";
                echo "============ YHHB Start "`date '+%Y-%m-%d %H:%M:%S'`" =============" >> "$LOG_FILE_PATH/$(basename ${hbPaths[$index]}).log"
            else
                cmd="$cmd""/dev/null";
            fi
            cmd="$cmd"" 2>&1 &";
            
            # echo "$cmd"
            eval "$cmd"
        else
            echo "[WARN] YHHB(${hbPaths[$index]}) is runing.";
        fi
    done
}

stop() {
    indexs=$(getIndexs $1);
    for index in $indexs; do
        if [ $index -lt 0 ] || [ $index -gt ${#hbPaths[@]} ]; then
            continue;
        fi
        
        pid=$(getHomebridgePID ${hbPaths[$index]});
        if [ -z "$pid" ]; then
            echo "[WARN] YHHB(${hbPaths[$index]}) is not runing.";
        else
            `kill $pid`
        fi
    done
}

help() {
    echo "YHHB, version $version";
    echo "Usage:  bash YHHB [option]";
    echo "        bash YHHB [option] index1,index2...";
    echo "options:";
    echo "        start         start homebridge";
    echo "        stop          stop homebridge";
    echo "        restart       restart homebridge";
    echo "        status        check homebridge status";
    echo "        config        check homebridge config";
    echo "        version       display YHHB version";
    echo "more information reference";
    echo "          https://github.com/YinHangCode/YHHB";
}

printVersion() {
    echo "*************************************";
    echo "            YHHB v$version           ";
    echo "                         By YinHang  ";
    echo " https://github.com/YinHangCode/YHHB ";
    echo "                 QQ Group: 107927710 ";
    echo "*************************************";
}

case "$1" in
    'start')
        start $2
        ;;
    'stop')
        stop $2
        ;;
    'restart')
        stop $2
        start $2
        ;;
    'config')
        config $2
        ;;
    'status')
        status $2
        ;;
    'toggle')
        toggle $2
        ;;
    'help')
        help
        ;;
    'version')
        printVersion
        ;;
    *)
        help
        exit 1
        ;;
esac

